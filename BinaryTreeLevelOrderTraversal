BinaryTreeLevelOrderTraversal

Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example:
Given binary tree {3,9,20,#,#,15,7},
    3
   / \
  9  20
    /  \
   15   7
return its level order traversal as:
[
  [3],
  [9,20],
  [15,7]
]---
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {

        List<List<Integer>> re = new ArrayList<List<Integer>>();
        if(root == null) return re;

        ArrayList<TreeNode> q = new ArrayList<TreeNode>();
        q.add(root);

        int start = 0;
        while(start!=q.size())
        {
        	int siz = q.size();
        	List<Integer> r = new ArrayList<Integer>();
        	for(int i=start; i< siz; i++)
        	{
        		TreeNode cur = q.get(i);
        		r.add(cur.val);
        		if(cur.left!=null) q.add(cur.left);
        		if(cur.right!=null) q.add(cur.right);
        	}
        	start = siz;
        	re.add(r);
        }
        return re;
    
    }
}