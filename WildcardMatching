WildcardMatching

Implement wildcard pattern matching with support for '?' and '*'.

'?' Matches any single character.
'*' Matches any sequence of characters (including the empty sequence).

The matching should cover the entire input string (not partial).

The function prototype should be:
bool isMatch(const char *s, const char *p)

Some examples:
isMatch("aa","a") → false
isMatch("aa","aa") → true
isMatch("aaa","aa") → false
isMatch("aa", "*") → true
isMatch("aa", "a*") → true
isMatch("ab", "?*") → true
isMatch("aab", "c*a*b") → false

---

public class Solution {
    public boolean isMatch(String s, String p) {
		char[] a = s.toCharArray(), b = p.toCharArray();
		int m = a.length, n = b.length;
		if(n==0) return m==0;

		int i=0, j=0;
		int star = -1, ii = -1;
		while(i<m)
		{
			if(j<n && (a[i]==b[j] || b[j]=='?'))
			{
				i++; j++;
			}
			else if(j<n && b[j]=='*')
			{
				star = j;
				j++;
				ii = i+1;
			}
			else if(star!=-1)
			{
				i = ii++;
				j=star+1;
			}
			else
			{
				return false;
			}
		}
		while(j<n && b[j]=='*') j++;
		return j==n;

    }
}