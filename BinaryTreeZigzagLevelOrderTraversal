BinaryTreeZigzagLevelOrderTraversal

Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).

For example:
Given binary tree {3,9,20,#,#,15,7},
    3
   / \
  9  20
    /  \
   15   7
return its zigzag level order traversal as:
[
  [3],
  [20,9],
  [15,7]
]
---
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {

    	List<List<Integer>> re = new ArrayList<List<Integer>>();
    	if(root==null) return re;

    	ArrayList<TreeNode> q = new ArrayList<TreeNode>();
    	q.add(root);
    	boolean flg = false;

    	int start = 0;
    	int end = q.size();
    	while(start<end)
    	{
    		List<Integer> level = new ArrayList<Integer>();
    		for(int i=start; i<end; i++)
    		{
    			if(!flg) level.add(q.get(i).val);
    			else level.add(0,q.get(i).val);
    			if(q.get(i).left!=null) q.add(q.get(i).left);
    			if(q.get(i).right!=null) q.add(q.get(i).right);
    		}
    		start = end;
    		end = q.size();
    		flg = !flg;
    		re.add(level);
    	}
    	return re;
    
    }
}