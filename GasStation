GasStation

There are N gas stations along a circular route, where the amount of gas at station i is gas[i].

You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.

Return the starting gas station's index if you can travel around the circuit once, otherwise return -1.

Note:
The solution is guaranteed to be unique.


---
public class Solution {
    public int canCompleteCircuit(int[] gas, int[] cost) {
        int n = gas.length;
        if(n!=cost.length)
            return -1;
            
        int[] diff = new int[n];
        int[] G = new int[n];
        for(int i=0;i<n;i++)
            diff[i] = gas[i] - cost[i];
        
        int min = Integer.MAX_VALUE;
        int sum = 0;

        for(int i=0;i<n;i++)
        {
            sum+=diff[i];
            if(sum<min)
                min = sum;
        }
        if(min>=0) return 0;
        
        G[0] = min;
        for(int i=1;i<n;i++)
        {
            G[i] = Math.min((G[i-1]-diff[i-1]), sum);
            if(G[i]>=0) return i;
        }
        
        return -1;
    }
}