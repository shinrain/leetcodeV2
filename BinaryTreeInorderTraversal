BinaryTreeInorderTraversal

Given a binary tree, return the inorder traversal of its nodes' values.

For example:
Given binary tree {1,#,2,3},
   1
    \
     2
    /
   3
return [1,3,2].

---
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {


    	List<Integer> re = new ArrayList<Integer>();
    	if(root == null) return re;

    	TreeNode cur = root, tail = null, pre = null;
    	root = null;
    	while(cur!=null)
    	{
    		if(cur.left==null)
    		{
    			if(root == null) { root = cur; tail = cur; cur = cur.right; tail.right = null; }
    			else
    			{
    				tail.right = cur;
    				cur = cur.right;
    				tail = tail.right;
    				tail.right = null;
    				tail.left = null;
    			}
    		}
    		else
    		{
    			pre = cur.left;
    			while(pre.right!=null && pre.right!=cur) pre = pre.right;
    			if(pre.right == null){ pre.right = cur; cur = cur.left; pre.right.left = null; }
    			else cur.left = null;
    		}
    	}
    	cur = root;
    	while(cur!=null) { re.add(cur.val); cur = cur.right; }
    	return re;
    
    
    }
}