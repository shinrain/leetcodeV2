BinaryTreePreorderTraversal

Given a binary tree, return the preorder traversal of its nodes' values.

For example:
Given binary tree {1,#,2,3},
   1
    \
     2
    /
   3
return [1,2,3].
---
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {

    	List<Integer> re =new ArrayList<Integer>();

        if(root == null) return re;

        while(root!=null)
        {
        	if(root.left == null){ re.add(root.val); root = root.right; continue; }

        	TreeNode pre = null;
        	for(pre = root.left; pre.right!=null && pre.right!=root.right; pre=pre.right);

        	if(pre.right == null){ pre.right = root.right; re.add(root.val); root = root.left;}
        	else
        	{
        		pre.right = null;  root = root.right;
        	}
        }
        return re;
    
    }
}
