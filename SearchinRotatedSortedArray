SearchinRotatedSortedArray

Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.

---

public class Solution {
    public int search(int[] A, int target) {
    
    	int n = A.length;
    	if(n==0) return -1;
    	if(n==1)
    		if(A[0] == target) return 0;
    		else return -1;

    	int l = 0, r = n-1;

    	while(l<=r)
    	{
    		int mid = l+(r-l)/2;
    		if(A[mid] == target) return mid;

    		if(A[l]<A[mid])
    		{
    			if(target >= A[l] && target < A[mid]) r = mid-1;
    			else l = mid+1;
    		}
    		else if (A[l] > A[mid])
    		{
    			if(target > A[mid] && target <= A[r]) l = mid+1;
    			else r = mid-1;
    		}
    		else l++;
    	}	    
    	return -1;
    
    }
}