3Sum

Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:
Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)
The solution set must not contain duplicate triplets.
    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2)
---

public class Solution {
    public List<List<Integer>> threeSum(int[] num) {
        List<List<Integer>> re = new ArrayList<List<Integer>>();
        int n = num.length;
        if(n<3) return re;
        
        Arrays.sort(num);
        for(int i=0;i<n-2;i++)
        {
            while(i!=0 && i<n-2 && num[i] == num[i-1]) i++;
            if(i==n-2) break;
            
            int j = i+1, k = n-1;
            while(j<k)
            {
                while(j!=i+1 && j<k && num[j]==num[j-1]) j++;
                if(j==k) break;
                while(k!=n-1 && j<k && num[k]==num[k+1]) k--;
                if(j==k) break;
                
                int sum = num[i]+num[j]+num[k];
                if(sum == 0)
                {
                    List<Integer> r = new ArrayList<Integer>();
                    r.add(num[i]); r.add(num[j]); r.add(num[k]);
                    re.add(r);
                    j++; k--;
                }
                else if(sum<0)  j++;
                else k--;
            }
        }
        return re;
    }
}