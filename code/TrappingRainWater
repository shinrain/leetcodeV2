TrappingRainWater

Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.

For example, 
Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.

---

public class Solution {
    public int trap(int[] A) {
        int n = A.length;
        if(n<=2) return 0;
        
        int[] big = new int[n];
        big[0] = A[0];
        for(int i=1;i<n;i++)
            if(A[i]>=big[i-1]) big[i] = A[i];
            else    big[i] = big[i-1];
        
        int rightBig = A[n-1];
        int total = 0;
        for(int i=n-2; i>0; i--)
        {
            if(A[i] < rightBig)
            {
                if(A[i]<big[i]) total += Math.min(rightBig, big[i])-A[i];
            }
            else rightBig = A[i];
        }
        return total;
    }
}