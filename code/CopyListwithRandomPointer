CopyListwithRandomPointer

A linked list is given such that each node contains an additional random pointer which could point to any node in the list or null.

Return a deep copy of the list.

---
/**
 * Definition for singly-linked list with a random pointer.
 * class RandomListNode {
 *     int label;
 *     RandomListNode next, random;
 *     RandomListNode(int x) { this.label = x; }
 * };
 */
public class Solution {
    public RandomListNode copyRandomList(RandomListNode head) {

 		if(head == null) return null;
		
		RandomListNode cur = head;
		while(cur!=null)
		{
			RandomListNode t = cur.next;
			cur.next = new RandomListNode(cur.label);
			cur.next.next = t;
			cur = t;
		}

		cur = head;
		while(cur != null)
		{
			if(cur.next == null) System.exit(-1);
			if(cur.random == null) cur.next.random = null;
			else cur.next.random = cur.random.next;
			cur = cur.next.next;
		}
		cur = head;
		RandomListNode newHead = cur.next;

		while(cur!=null)
		{
			RandomListNode t = cur.next;
			cur.next = t.next;
			if(cur.next !=null) t.next = cur.next.next;
			else t.next = null;
			cur = cur.next;
		}
		return newHead;
    
    }
}