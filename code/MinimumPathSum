MinimumPathSum

Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

--
public class Solution {
    public int minPathSum(int[][] grid) {
        int m = grid.length;
        if(m==0) return 0;
        int n = grid[0].length;
        if(n==0) return 0;
        
        int[] re = new int[n];

        re[0] = grid[0][0];
        for(int i=1; i<n; i++)
            re[i] = re[i-1] + grid[0][i];
        
        for(int i=1; i<m;i++)
        {
            re[0] += grid[i][0];
            for(int j=1; j<n; j++)
                re[j] = grid[i][j] + Math.min(re[j], re[j-1]);
        }
        return re[n-1];
    }
}