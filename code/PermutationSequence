PermutationSequence

The set [1,2,3,â€¦,n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order,
We get the following sequence (ie, for n = 3):

"123"
"132"
"213"
"231"
"312"
"321"
Given n and k, return the kth permutation sequence.

---

public class Solution {

 	public static boolean nextPerm(int[] a)
 	{
 		int n = a.length;
 		if(n<=1) return false;

 		int i=n-1, j=n-1;
 		for(; i>0 && a[i]<=a[i-1];i--);
 		if(i==0) return false;

 		for(; j>=i && a[j]<=a[i-1];j--);
 		if(j==i-1) return false;

 		int t = a[i-1]; a[i-1] = a[j]; a[j] = t;

 		for(int l=i, r=n-1; l<r; l++, r--)
 		{
 			t = a[l]; a[l] = a[r]; a[r] =t;
 		}
 		return true;
 	}

    public static String getPermutation(int n, int k) {
        if(n==0) return "";

        int[] a= new int[n];
        for(int i=0;i<n;i++)
        {
        	a[i] = i+1;
        }
        int count =0;
        for(int i=1; i<k; i++)
        {
        	count++;
        	if(!nextPerm(a)) return getPermutation(n, k%count);
        }
        char[] re = new char[n];
        for(int i=0;i<n;i++)
        {
        	re[i] = (char)(a[i]+'0');
        }
        return new String(re);
    }
}