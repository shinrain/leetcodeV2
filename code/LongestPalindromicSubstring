LongestPalindromicSubstring

Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.

---

public class Solution {
    public String longestPalindrome(String s) {
        int n = s.length();
        if(n<2) return s;
        
        int maxStart = 1, maxEnd = 0;
        for(int i=0;i<n;i++)
        {
            int l = i, r = i;
            while(l>=0 && r<n && s.charAt(l) == s.charAt(r)) {l--;r++;}
            if(maxEnd - maxStart < r-l-2)
            {
                maxStart = l+1;
                maxEnd = r-1;
            }
        }
        for(int i=0;i<n;i++)
        {
            int l = i, r = i+1;
            while(l>=0 && r<n && s.charAt(l) == s.charAt(r)) {l--;r++;}
            if(maxEnd - maxStart < r-l-2)
            {
                maxStart = l+1;
                maxEnd = r-1;
            }
        }
        return s.substring(maxStart, maxEnd+1);
    }
}