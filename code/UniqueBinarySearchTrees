UniqueBinarySearchTrees

Given n, how many structurally unique BST's (binary search trees) that store values 1...n?

For example,
Given n = 3, there are a total of 5 unique BST's.

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3

---
public class Solution {
    public int numTrees(int l, int r)
    {
    	if(l==r) return 1;
    	if(l>r) return 0;

    	int re = 0;
    	for(int i=l;i<=r;i++)
    	{
    		int left = numTrees(l,i-1);
    		int right =numTrees(i+1, r);
    		if(left == 0) re+=right;
    		else if(right==0) re+=left;
    		else re+=left*right;
    	}
    	return re;
    }
    public int numTrees(int n)
    {
        return numTrees(0,n-1);
    }

}

---

public class Solution {
    public int numTrees(int n) {
        if(n<=1) return n;
        
        int[] m = new int[n];
        m[0] = 1;
        for(int i=1;i<m.length;i++)
        {
            m[i] +=2*m[i-1];
            for(int j=1;j<i;j++)
                m[i] += m[j-1]*m[i-j-1];
        }
        return m[n-1];
    }
}