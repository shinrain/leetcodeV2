SearchinRotatedSortedArrayII

Follow up for "Search in Rotated Sorted Array":
What if duplicates are allowed?

Would this affect the run-time complexity? How and why?

Write a function to determine if a given target is in the array.

---

public class Solution {
    public boolean search(int[] A, int target) {

		int n = A.length;
		if(n==0) return false;
		if(n==1) return A[0] == target;    	    

		int l=0, r = n-1;

		while(l<=r)
		{
			int mid = l+(r-l)/2;
			if(A[mid] == target) return true;
			if(A[mid]<A[l])
			{
				if(target>A[mid] && target<=A[r]) l=mid+1;
				else r=mid-1;
			}
			else if(A[mid]>A[l])
			{
				if(target>=A[l] && target<A[mid]) r = mid-1;
				else l = mid+1;
			}
			else l++;
		}
		return false;
    
    }
}