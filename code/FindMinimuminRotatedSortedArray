FindMinimuminRotatedSortedArray

Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.


===


public class Solution {
    public int findMin(int[] num) {
        int n = num.length;
        if(n==0) return -1;
        if(n==1) return num[0];
        
        int l = 0, r = n-1;
        int re = 0;
        while(l<=r)
        {
            int mid = l+(r-l)/2;
            if(num[mid] >num[l])
            {
                if(num[re]>num[l]) re = l;
                l = mid+1;
            }
            else if(num[mid]<num[l])
            {
                if(num[re] > num[mid])re = mid;
                r = mid;
            }
            else
            {
                if(num[re]>num[l]) re = l;
                l++;
            }
        }
        return num[re];
    }
}