StringtoInteger

Implement atoi to convert a string to an integer.

Hint: Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases.

Notes: It is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front
--

Better Solution:

    public int atoi(String str) {
        str = str.trim();
        char[] a = str.toCharArray();
        int n = a.length;
        long re = 0;
        boolean flg = false;
        
        for(int i=0;i<n;i++)
        {
            if(a[i]=='-')
            {
                if(i==0)
                {
                    flg = true;
                }
                else break;
            }
            else if(a[i]=='+')
            {
                if(i!=0) break;
            }
            else
            {
                if(a[i]>='0' && a[i]<='9')
                {
                    re = re*10+a[i]-'0';
                    if(re-Integer.MAX_VALUE>1)   break; 
                }
                else break;
            }
        }
        re = flg?-re:re;
        if(re>Integer.MAX_VALUE) return Integer.MAX_VALUE;
        if(re<Integer.MIN_VALUE) return Integer.MIN_VALUE;
        return (int)re;
    }

===

public class Solution {
    public int atoi(String str) {

        char[] s = str.toCharArray();
        int n = s.length;
        if(n==0) return 0;

        boolean  number = false;
        int sign = 0;

        long re = 0;
        for(char c : s)
        {
        	if(!number && (sign == 0) && c==' ') continue;

        	int num = (int)(c-'0');

        	if(num<0 || num>9)
        	{
        		if( sign!=0 || (c!='+' && c!='-') ) break;

        		if(c == '-') sign = -1;
        		else sign =1;
        	}
        	else
        	{
        		if(sign == 0) sign =1;
        		number = true;
        		re = re*10+(long)num;
        	}
        }
        if(sign == -1) re = -re;
        if(re > Integer.MAX_VALUE) return Integer.MAX_VALUE;
        if(re < Integer.MIN_VALUE) return Integer.MIN_VALUE;
        return (int)re;
    
    }
}