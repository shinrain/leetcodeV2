PopulatingNextRightPointersinEachNodeII

Follow up for problem "Populating Next Right Pointers in Each Node".

What if the given tree could be any binary tree? Would your previous solution still work?

Note:

You may only use constant extra space.
For example,
Given the following binary tree,
         1
       /  \
      2    3
     / \    \
    4   5    7
After calling your function, the tree should look like:
         1 -> NULL
       /  \
      2 -> 3 -> NULL
     / \    \
    4-> 5 -> 7 -> NULL
---
/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {

    public static void connect(TreeLinkNode root, TreeLinkNode par)
    {
        if(root == null) return;
    	if(par == null) { root.next = null;  return;}
    	if(root == par.left && par.right!=null) { root.next = par.right; connect(root.next, par); return; }
    	par = par.next;
    	while(par!=null)
    	{	
    		if(par.left!=null)
    		{
				root.next = par.left;
				connect(root.next, par);
				break;
    		}
			
			else if(par.right!=null)
			{
				root.next = par.right;
				connect(root.next, par);
				break;
			}
			else par = par.next;
    	}
    }

    public static void connect(TreeLinkNode root) {
        TreeLinkNode  par =null;
        while(root!=null)
        {
            connect(root, par);
            while(root!=null)
            {
        	    if(root.left!=null)
        	    {
        	        par = root;
        	    	root = root.left;
        	    	break;
        	    }
        	    else if(root.right != null)
        	    {
        	        par = root;
        		    root = root.right;
        		    break;
        	    }else
        	    {
        	        root = root.next;
        	    }
            }
        }
    }
}