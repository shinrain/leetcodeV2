RotateList

Given a list, rotate the list to the right by k places, where k is non-negative.

For example:
Given 1->2->3->4->5->NULL and k = 2,
return 4->5->1->2->3->NULL.

---

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode rotateRight(ListNode head, int n) {
    	if(head == null) return null;
        if(n==0) return head;

    	int count = 0;
    	ListNode first = head, second = head;

    	while(first.next!=null)
    	{
    		count++;
    		first = first.next;
    		if(count > n)	second = second.next;
    	}

    	if(count<n) return rotateRight(head, n%(count+1));

    	ListNode newHead = second.next;
    	second.next = null;
    	first.next = head;
    	return newHead;
    }
}