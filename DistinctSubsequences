DistinctSubsequences

Given a string S and a string T, count the number of distinct subsequences of T in S.

A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, "ACE" is a subsequence of "ABCDE" while "AEC" is not).

Here is an example:
S = "rabbbit", T = "rabbit"

Return 3.
---
public class Solution {
    public int numDistinct(String S, String T) {
        
        int n = T.length();
        if(n==0) return 1;
        int m = S.length();
        if(m==0) return 0;

        int[] re = new int[n+1];
        for(int i =1; i<n+1; i++)
        	re[i] = 0;
        re[0] = 1;
        for(int i=0;i<m;i++)
        {
        	for(int j = n; j>0; j--)
        	{
        		if(S.charAt(i)==T.charAt(j-1)) re[j] = re[j]+re[j-1];
        	}
        }
        return re[n];
    
        
    }
}